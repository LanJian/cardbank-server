// Generated by CoffeeScript 1.4.0
var ObjectId, Schema, bcrypt, mongoose, schema;

bcrypt = require('bcrypt');

mongoose = require('mongoose');

Schema = mongoose.Schema;

ObjectId = Schema.ObjectId;

schema = new Schema({
  email: {
    type: String,
    index: true,
    required: true
  },
  hashedPassword: {
    type: String,
    require: true
  },
  myCards: [ObjectId],
  cards: [ObjectId]
});

schema.virtual('password').set(function(password) {
  this._password = password;
  return this.hashedPassword = this.encryptPassword(password);
});

schema.virtual('password').get(function() {
  return this._password;
});

schema.virtual('id').get(function() {
  console.log("get ID: ", this._id.toHexString());
  return this._id.toHexString();
});

schema.methods.encryptPassword = function(password) {
  var salt;
  salt = bcrypt.genSaltSync(10);
  return bcrypt.hashSync(password, salt);
};

schema.methods.authenticate = function(password) {
  return bcrypt.compareSync(password, this.hashedPassword);
};

module.exports = mongoose.model('User', schema);
